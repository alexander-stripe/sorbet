class <emptyTree><<C <root>>> < (::<todo sym>)
  def baz1<<todo method>>(&<blk>)
    begin
      a = "foo"
      b = a.getbyte(a)
    end
  end

  def baz2<<todo method>>(&<blk>)
    begin
      a = "foo"
      b = a.getbyte("foo")
    end
  end

  def baz3<<todo method>>(&<blk>)
    b = "foo".getbyte("foo")
  end

  def baz4<<todo method>>(&<blk>)
    b = <self>.a().getbyte("foo")
  end

  def baz5<<todo method>>(cond, &<blk>)
    begin
      if cond
        b = 1
      else
        b = "foo"
      end
      b = b.getbyte(1)
    end
  end

  def baz6<<todo method>>(cond, &<blk>)
    begin
      if cond
        b = 1
      else
        b = "foo"
      end
      b = "foo".getbyte(b)
    end
  end

  def baz7<<todo method>>(cond, &<blk>)
    begin
      if cond
        b = 1
      else
        <emptyTree>
      end
      b = "foo".getbyte(b)
    end
  end

  def baz8<<todo method>>(&<blk>)
    while true
      b = 1
    end
  end
end
