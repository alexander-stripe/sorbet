Begin {
  stmts = [
    If {
      condition = MatchCurLine {
        cond = Regexp {
          regex = [
          ]
          opts = Regopt {
            opts = ""
          }
        }
      }
      then_ = NULL
      else_ = NULL
    }
    If {
      condition = MatchCurLine {
        cond = Regexp {
          regex = [
            String {
              val = <U wat>
            }
          ]
          opts = Regopt {
            opts = ""
          }
        }
      }
      then_ = Begin {
        stmts = [
          String {
            val = <U This is _not_ a truthiness test of a Regexp literal,>
          }
          String {
            val = <U but a special syntax implicitly match against the last line read by an IO object.>
          }
        ]
      }
      else_ = NULL
    }
    If {
      condition = MatchCurLine {
        cond = Regexp {
          regex = [
            String {
              val = <U wat >
            }
            Begin {
              stmts = [
                Integer {
                  val = "123"
                }
              ]
            }
          ]
          opts = Regopt {
            opts = ""
          }
        }
      }
      then_ = String {
        val = <U This one uses an interpolated regexp>
      }
      else_ = NULL
    }
    Assign {
      lhs = LVarLhs {
        name = <U b>
      }
      rhs = Send {
        receiver = Begin {
          stmts = [
            MatchCurLine {
              cond = Regexp {
                regex = [
                  String {
                    val = <U wat>
                  }
                ]
                opts = Regopt {
                  opts = ""
                }
              }
            }
          ]
        }
        method = <U !>
        args = [
        ]
      }
    }
    Assign {
      lhs = LVarLhs {
        name = <U b>
      }
      rhs = Send {
        receiver = Begin {
          stmts = [
            MatchCurLine {
              cond = Regexp {
                regex = [
                  String {
                    val = <U wat >
                  }
                  Begin {
                    stmts = [
                      Integer {
                        val = "123"
                      }
                    ]
                  }
                ]
                opts = Regopt {
                  opts = ""
                }
              }
            }
          ]
        }
        method = <U !>
        args = [
        ]
      }
    }
  ]
}
