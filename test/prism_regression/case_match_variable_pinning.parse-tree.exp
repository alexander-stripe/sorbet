Begin {
  stmts = [
    Assign {
      lhs = LVarLhs {
        name = <U lvar>
      }
      rhs = Integer {
        val = "1"
      }
    }
    CaseMatch {
      expr = Send {
        receiver = NULL
        method = <U foo>
        args = [
        ]
      }
      inBodies = [
        InPattern {
          pattern = Pin {
            var = LVar {
              name = <U lvar>
            }
          }
          guard = NULL
          body = String {
            val = <U Has the same value as the preexisting variable `x`>
          }
        }
        InPattern {
          pattern = Pin {
            var = IVar {
              name = <U @ivar>
            }
          }
          guard = NULL
          body = String {
            val = <U Has the same value as `@ivar`>
          }
        }
        InPattern {
          pattern = Pin {
            var = CVar {
              name = <U @@cvar>
            }
          }
          guard = NULL
          body = String {
            val = <U Has the same value as `@@cvar`>
          }
        }
        InPattern {
          pattern = Pin {
            var = GVar {
              name = <U $global>
            }
          }
          guard = NULL
          body = String {
            val = <U Has the same value as `$global`>
          }
        }
        InPattern {
          pattern = Pin {
            var = Begin {
              stmts = [
                Send {
                  receiver = Integer {
                    val = "1"
                  }
                  method = <U +>
                  args = [
                    Integer {
                      val = "2"
                    }
                  ]
                }
              ]
            }
          }
          guard = NULL
          body = String {
            val = <U Has the same value as `1 + 2`>
          }
        }
        InPattern {
          pattern = MatchVar {
            name = <U x>
          }
          guard = NULL
          body = DString {
            nodes = [
              String {
                val = <U Some other value: >
              }
              Begin {
                stmts = [
                  LVar {
                    name = <U x>
                  }
                ]
              }
            ]
          }
        }
      ]
      elseBody = NULL
    }
  ]
}
