ClassDef{
  kind = class
  name = EmptyTree
  symbol = <C <U <root>>>
  ancestors = [ConstantLit{
      symbol = (class ::<todo sym>)
      orig = nullptr
    }]
  rhs = [
    Send{
      flags = {}
      recv = ConstantLit{
        symbol = (class ::<Magic>)
        orig = nullptr
      }
      fun = <U <call-with-splat-and-block-pass>>
      block = nullptr
      pos_args = 5
      args = [
        UnresolvedConstantLit{
          cnst = <C <U RECEIVER1>>
          scope = EmptyTree
        }
        Literal{ value = :m1 }
        Send{
          flags = {}
          recv = Send{
            flags = {}
            recv = Array{
              elems = [
                Literal{ value = 1 }
                Literal{ value = 2 }
              ]
            }
            fun = <U concat>
            block = nullptr
            pos_args = 1
            args = [
              Send{
                flags = {}
                recv = ConstantLit{
                  symbol = (class ::<Magic>)
                  orig = nullptr
                }
                fun = <U <splat>>
                block = nullptr
                pos_args = 1
                args = [
                  Array{
                    elems = [
                      Literal{ value = 3 }
                      Literal{ value = 4 }
                    ]
                  }
                ]
              }
            ]
          }
          fun = <U concat>
          block = nullptr
          pos_args = 1
          args = [
            Array{
              elems = [
                Literal{ value = 5 }
              ]
            }
          ]
        }
        Array{
          elems = [
            InsSeq{
              stats = [
                Assign{
                  lhs = UnresolvedIdent{
                    kind = Local
                    name = <D <U <hashTemp>> $2>
                  }
                  rhs = Hash{
                    pairs = [
                      [
                        key = Literal{ value = :e }
                        value = Literal{ value = 6 }
                      ]
                    ]
                  }
                }
                Assign{
                  lhs = UnresolvedIdent{
                    kind = Local
                    name = <D <U <hashTemp>> $2>
                  }
                  rhs = Send{
                    flags = {}
                    recv = ConstantLit{
                      symbol = (class ::<Magic>)
                      orig = nullptr
                    }
                    fun = <U <merge-hash>>
                    block = nullptr
                    pos_args = 2
                    args = [
                      UnresolvedIdent{
                        kind = Local
                        name = <D <U <hashTemp>> $2>
                      }
                      Send{
                        flags = {}
                        recv = ConstantLit{
                          symbol = (class ::<Magic>)
                          orig = nullptr
                        }
                        fun = <U <to-hash-nodup>>
                        block = nullptr
                        pos_args = 1
                        args = [
                          Send{
                            flags = {privateOk}
                            recv = Self
                            fun = <U f>
                            block = nullptr
                            pos_args = 0
                            args = [
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              expr = UnresolvedIdent{
                kind = Local
                name = <D <U <hashTemp>> $2>
              }
            }
          ]
        }
        UnresolvedConstantLit{
          cnst = <C <U FORWARDED_BLOCK>>
          scope = EmptyTree
        }
      ]
    }

    Send{
      flags = {}
      recv = ConstantLit{
        symbol = (class ::<Magic>)
        orig = nullptr
      }
      fun = <U <call-with-splat>>
      block = Block {
        params = [
          UnresolvedIdent{
            kind = Local
            name = <U a>
          }
          UnresolvedIdent{
            kind = Local
            name = <U b>
          }
          RestParam{ expr = UnresolvedIdent{
            kind = Local
            name = <U c>
          } }
          UnresolvedIdent{
            kind = Local
            name = <U d>
          }
          KeywordArg{ expr = UnresolvedIdent{
            kind = Local
            name = <U e>
          } }
          RestParam{ expr = KeywordArg{ expr = UnresolvedIdent{
            kind = Local
            name = <U f>
          } } }
          BlockParam{ expr = UnresolvedIdent{
            kind = Local
            name = <U block>
          } }
        ]
        body = Literal{ value = "inline block" }
      }
      pos_args = 4
      args = [
        UnresolvedConstantLit{
          cnst = <C <U RECEIVER2>>
          scope = EmptyTree
        }
        Literal{ value = :m2 }
        Send{
          flags = {}
          recv = Send{
            flags = {}
            recv = Array{
              elems = [
                Literal{ value = 1 }
                Literal{ value = 2 }
              ]
            }
            fun = <U concat>
            block = nullptr
            pos_args = 1
            args = [
              Send{
                flags = {}
                recv = ConstantLit{
                  symbol = (class ::<Magic>)
                  orig = nullptr
                }
                fun = <U <splat>>
                block = nullptr
                pos_args = 1
                args = [
                  Array{
                    elems = [
                      Literal{ value = 3 }
                      Literal{ value = 4 }
                    ]
                  }
                ]
              }
            ]
          }
          fun = <U concat>
          block = nullptr
          pos_args = 1
          args = [
            Array{
              elems = [
                Literal{ value = 5 }
              ]
            }
          ]
        }
        Array{
          elems = [
            InsSeq{
              stats = [
                Assign{
                  lhs = UnresolvedIdent{
                    kind = Local
                    name = <D <U <hashTemp>> $3>
                  }
                  rhs = Hash{
                    pairs = [
                      [
                        key = Literal{ value = :e }
                        value = Literal{ value = 6 }
                      ]
                    ]
                  }
                }
                Assign{
                  lhs = UnresolvedIdent{
                    kind = Local
                    name = <D <U <hashTemp>> $3>
                  }
                  rhs = Send{
                    flags = {}
                    recv = ConstantLit{
                      symbol = (class ::<Magic>)
                      orig = nullptr
                    }
                    fun = <U <merge-hash>>
                    block = nullptr
                    pos_args = 2
                    args = [
                      UnresolvedIdent{
                        kind = Local
                        name = <D <U <hashTemp>> $3>
                      }
                      Send{
                        flags = {}
                        recv = ConstantLit{
                          symbol = (class ::<Magic>)
                          orig = nullptr
                        }
                        fun = <U <to-hash-nodup>>
                        block = nullptr
                        pos_args = 1
                        args = [
                          Send{
                            flags = {privateOk}
                            recv = Self
                            fun = <U f>
                            block = nullptr
                            pos_args = 0
                            args = [
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              expr = UnresolvedIdent{
                kind = Local
                name = <D <U <hashTemp>> $3>
              }
            }
          ]
        }
      ]
    }

    Send{
      flags = {}
      recv = ConstantLit{
        symbol = (class ::<Magic>)
        orig = nullptr
      }
      fun = <U <call-with-splat>>
      block = Block {
        params = [
          UnresolvedIdent{
            kind = Local
            name = <U a>
          }
          UnresolvedIdent{
            kind = Local
            name = <U b>
          }
          RestParam{ expr = UnresolvedIdent{
            kind = Local
            name = <U c>
          } }
          UnresolvedIdent{
            kind = Local
            name = <U d>
          }
          KeywordArg{ expr = UnresolvedIdent{
            kind = Local
            name = <U e>
          } }
          RestParam{ expr = KeywordArg{ expr = UnresolvedIdent{
            kind = Local
            name = <U f>
          } } }
          BlockParam{ expr = UnresolvedIdent{
            kind = Local
            name = <U block>
          } }
        ]
        body = Literal{ value = "do-end block" }
      }
      pos_args = 4
      args = [
        UnresolvedConstantLit{
          cnst = <C <U RECEIVER3>>
          scope = EmptyTree
        }
        Literal{ value = :m3 }
        Send{
          flags = {}
          recv = Send{
            flags = {}
            recv = Array{
              elems = [
                Literal{ value = 1 }
                Literal{ value = 2 }
              ]
            }
            fun = <U concat>
            block = nullptr
            pos_args = 1
            args = [
              Send{
                flags = {}
                recv = ConstantLit{
                  symbol = (class ::<Magic>)
                  orig = nullptr
                }
                fun = <U <splat>>
                block = nullptr
                pos_args = 1
                args = [
                  Array{
                    elems = [
                      Literal{ value = 3 }
                      Literal{ value = 4 }
                    ]
                  }
                ]
              }
            ]
          }
          fun = <U concat>
          block = nullptr
          pos_args = 1
          args = [
            Array{
              elems = [
                Literal{ value = 5 }
              ]
            }
          ]
        }
        Array{
          elems = [
            InsSeq{
              stats = [
                Assign{
                  lhs = UnresolvedIdent{
                    kind = Local
                    name = <D <U <hashTemp>> $4>
                  }
                  rhs = Hash{
                    pairs = [
                      [
                        key = Literal{ value = :e }
                        value = Literal{ value = 6 }
                      ]
                    ]
                  }
                }
                Assign{
                  lhs = UnresolvedIdent{
                    kind = Local
                    name = <D <U <hashTemp>> $4>
                  }
                  rhs = Send{
                    flags = {}
                    recv = ConstantLit{
                      symbol = (class ::<Magic>)
                      orig = nullptr
                    }
                    fun = <U <merge-hash>>
                    block = nullptr
                    pos_args = 2
                    args = [
                      UnresolvedIdent{
                        kind = Local
                        name = <D <U <hashTemp>> $4>
                      }
                      Send{
                        flags = {}
                        recv = ConstantLit{
                          symbol = (class ::<Magic>)
                          orig = nullptr
                        }
                        fun = <U <to-hash-nodup>>
                        block = nullptr
                        pos_args = 1
                        args = [
                          Send{
                            flags = {privateOk}
                            recv = Self
                            fun = <U f>
                            block = nullptr
                            pos_args = 0
                            args = [
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              expr = UnresolvedIdent{
                kind = Local
                name = <D <U <hashTemp>> $4>
              }
            }
          ]
        }
      ]
    }
  ]
}
